{"version":3,"sources":["webpack://FormulaValue/webpack/universalModuleDefinition","webpack://FormulaValue/webpack/bootstrap","webpack://FormulaValue/./src/CompiledExpression.js","webpack://FormulaValue/./src/Helpers.js","webpack://FormulaValue/./src/DefaultValue.js","webpack://FormulaValue/./src/ConcatenatedText.js","webpack://FormulaValue/external \"moment\"","webpack://FormulaValue/external \"underscore\"","webpack://FormulaValue/./src/Formula.js","webpack://FormulaValue/./src/FormulaValue.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","CompiledExpression","Error","_underscore","getPath","context","toProcess","split","processed","length","element","shift","replace","completeField","field","arrayValue","push","Number","assignTo","variable","path","index","pathRoute","pathElement","nextPathElement","compact","_","_CompiledExpression2","DefaultValue","expression","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","ConcatenatedText","_Helpers","_moment","dataVarName","metaDataVarName","fieldPathsVarName","variablePattern","getDateTimeFormat","date","validateOperation","date1format","date2format","unit","evalWithSafeEnvironment","__availableSpecs","Y","M","W","D","h","years","months","weeks","days","hours","minutes","seconds","__defaultSpec","__processStarOperator","array","result","isArray","len","forEach","nestedElement","eval","error","console","warn","dateDiff","date1","date2","spec","_moment2","default","diff","sum","total","extract","text","separator","extractedValue","isNaN","flatten","shallow","groupConcat","join","concat","Array","slice","arguments","count","avg","formula","environment","rules","pattern","replacement","requiresContext","matches","test","fieldPath","Helpers","indexOf","hasStarOperator","resolveReferences","contextPath","Formula","_fieldPaths","fieldPathsCache","size","rule","RegExp","parsedFieldPath","_parsedExpression","data","metaData","resolvedFieldPaths","map","FormulaValue","undefined","isFormula","compiledExpression","isConcatenatedText"],"mappings":"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","file":"FormulaValue.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"moment\"), require(\"underscore\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"moment\", \"underscore\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FormulaValue\"] = factory(require(\"moment\"), require(\"underscore\"));\n\telse\n\t\troot[\"FormulaValue\"] = factory(root[\"moment\"], root[\"underscore\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__5__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","export default class CompiledExpression {\n\n\teval() {\n\t\tthrow new Error('Eval is not implemented');\n\t}\n\n}\n","import _ from 'underscore';\n\nlet getPath = (context) => {\n\tif (!context) {\n\t\treturn [];\n\t}\n\tvar toProcess = context.split(/\\.|::/);\n\tvar path;\n\tvar processed = [];\n\n\t// Use of .shift() was preferred over other iteration methods for performance reasons.\n\t// check this test: https://jsperf.com/shift-vs-traditional-loop\n\n\twhile(toProcess.length > 0) {\n\t\tvar element = toProcess.shift();\n\t\telement = element.replace(/(.*)\\[(@|\\*|\\d+)]/g, function(completeField, field, arrayValue) {\n\t\t\tprocessed.push(field);\n\t\t\tif (arrayValue !== '@' && arrayValue !== '*') {\n\t\t\t\tarrayValue = Number(arrayValue);\n\t\t\t}\n\t\t\tprocessed.push(arrayValue);\n\t\t\treturn '';\n\t\t});\n\t\tif (element) {\n\t\t\tprocessed.push(element);\n\t\t}\n\t}\n\treturn processed;\n};\n\nlet assignTo = (variable, path, index, value) => {\n\tvar pathRoute = getPath(path);\n\tif ('undefined' !== typeof index) {\n\t\tpathRoute.push(index);\n\t}\n\twhile (pathRoute.length) {\n\t\tvar pathElement = pathRoute.shift();\n\t\tif (pathRoute.length > 0) {\n\t\t\tif (!variable[pathElement]) {\n\t\t\t\tvar nextPathElement = pathRoute[0];\n\t\t\t\tif ('number' === typeof nextPathElement) {\n\t\t\t\t\tvariable[pathElement] = [];\n\t\t\t\t} else {\n\t\t\t\t\tvariable[pathElement] = {};\n\t\t\t\t}\n\t\t\t}\n\t\t\tvariable = variable[pathElement];\n\t\t} else {\n\t\t\tvariable[pathElement] = value;\n\t\t}\n\t}\n};\n\nlet compact = (variable, path) => {\n\tvar pathRoute = getPath(path);\n\twhile (pathRoute.length) {\n\t\tvar pathElement = pathRoute.shift();\n\t\tif (pathRoute.length > 0) {\n\t\t\tif (!variable[pathElement]) {\n\t\t\t\tvar nextPathElement = pathRoute[0];\n\t\t\t\tif ('number' === typeof nextPathElement) {\n\t\t\t\t\tvariable[pathElement] = [];\n\t\t\t\t} else {\n\t\t\t\t\tvariable[pathElement] = {};\n\t\t\t\t}\n\t\t\t}\n\t\t\tvariable = variable[pathElement];\n\t\t} else {\n\t\t\tvariable[pathElement] = _.compact(variable[pathElement]);\n\t\t}\n\t}\n};\n\nexport default {\n\n\tgetPath: getPath,\n\tassignTo: assignTo,\n\tcompact: compact\n\n};\n","import CompiledExpression from './CompiledExpression';\n\nexport default class DefaultValue extends CompiledExpression {\n\n\tconstructor(expression) {\n\t\tsuper();\n\n\t\tthis.value = expression;\n\t}\n\n\teval() {\n\t\treturn this.value;\n\t}\n\n}\n","import Helpers from './Helpers';\nimport CompiledExpression from './CompiledExpression';\n\nexport default class ConcatenatedText extends CompiledExpression {\n\n\tconstructor(expression) {\n\t\tsuper();\n\t}\n\n\tstatic isConcatenatedText(expression) {\n\t\treturn 'string' === typeof expression;\n\t}\n\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","import CompiledExpression from './CompiledExpression';\nimport Helpers from './Helpers';\nimport moment from 'moment';\n\nvar dataVarName = 'data',\n\tmetaDataVarName = 'metaData',\n\tfieldPathsVarName = '__fieldPaths',\n\tvariablePattern = '{{([^}]+)}}';\n\nvar getDateTimeFormat = function(date) {\n\tif (!date || typeof date !== 'string') {\n\t\treturn '';\n\t}\n\tswitch (date.length) {\n\t\tcase 10:\n\t\t\treturn 'YYYY-MM-DD';\n\t\tcase 19:\n\t\t\treturn 'YYYY-MM-DD HH:mm:ss';\n\t\tcase 8:\n\t\t\treturn 'HH:mm:ss';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nvar validateOperation = function(date1format, date2format, unit) {\n\tswitch (unit) {\n\t\tcase 'years':\n\t\tcase 'months':\n\t\tcase 'weeks':\n\t\tcase 'days':\n\t\t\tif (date1format === 'HH:mm:ss' || date2format === 'HH:mm:ss') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'hours':\n\t\tcase 'minutes':\n\t\tcase 'seconds':\n\t\t\tif ((date1format === 'HH:mm:ss' || date2format === 'HH:mm:ss') && date1format !== date2format) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn true;\n};\n\nvar evalWithSafeEnvironment = (function () {\n\n\tvar __availableSpecs = {\n\t\tY: 'years',\n\t\tM: 'months',\n\t\tW: 'weeks',\n\t\tD: 'days',\n\t\th: 'hours',\n\t\tm: 'minutes',\n\t\ts: 'seconds',\n\t\tyears: 'years',\n\t\tmonths: 'months',\n\t\tweeks: 'weeks',\n\t\tdays: 'days',\n\t\thours: 'hours',\n\t\tminutes: 'minutes',\n\t\tseconds: 'seconds'\n\t};\n\tvar __defaultSpec = 'seconds';\n\n\tvar __processStarOperator = function(array, path) {\n\t\tvar result = [];\n\t\tif (array && _.isArray(array) && array.length) {\n\t\t\tfor (var i = 0, len = array.length; i < len; i++) {\n\t\t\t\tvar value;\n\t\t\t\tif (_.isArray(array[i])) {\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tarray[i].forEach(function(nestedElement) {\n\t\t\t\t\t\tvalue.push(eval('nestedElement' + path));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvalue = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = eval('array[i]' + path);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.warn(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult.push(value);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\tfunction dateDiff(date1, date2, spec) {\n\t\tdate1format = getDateTimeFormat(date1);\n\t\tdate2format = getDateTimeFormat(date2);\n\t\tspec = __availableSpecs[spec] || __defaultSpec;\n\t\tif (validateOperation(date1format, date2format, spec)) {\n\t\t\tdate1 = moment(date1, date1format);\n\t\t\tdate2 = moment(date2, date2format);\n\t\t\treturn date1.diff(date2, spec);\n\t\t} else {\n\t\t\tconsole.warn('Invalid inputs at dateDiff.');\n\t\t}\n\t}\n\n\tfunction sum(array) {\n\t\tvar total = 0;\n\t\tif (array && _.isArray(array) && array.length) {\n\t\t\tfor (var i = 0, len = array.length; i < len; i++) {\n\t\t\t\tif (array[i]) {\n\t\t\t\t\ttotal += array[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn total;\n\t}\n\n\tfunction extract(text, separator, index) {\n\t\ttext = 'string' === typeof text ? text : (text || '');\n\t\tseparator = separator || ',';\n\t\tindex = index || 0;\n\n\t\tvar extractedValue = text.split(separator)[index],\n\t\t\tresult = isNaN(extractedValue) ? extractedValue : Number(extractedValue);\n\n\t\treturn result;\n\t}\n\n\tfunction flatten(array, shallow) {\n\t\treturn _.flatten(array, shallow);\n\t}\n\n\tfunction groupConcat(array, separator) {\n\t\tseparator = typeof separator === 'undefined' ? ', ' : separator;\n\t\treturn array.join(separator);\n\t}\n\n\tfunction concat() {\n\t\tvar elements = Array.prototype.slice.call(arguments);\n\t\treturn elements.join('');\n\t}\n\n\tfunction count(array) {\n\t\treturn array.length;\n\t}\n\n\tfunction avg(array) {\n\t\tvar total = sum(array);\n\t\tif (array && _.isArray(array) && array.length>0) {\n\t\t\ttotal = total / array.length;\n\t\t}\n\t\treturn total;\n\t}\n\n\treturn function(formula, environment) {\n\t\treturn eval(formula);\n\t};\n}).call();\n\nvar rules = [\n\t{\n\t\tpattern: '^=',\n\t\treplacement: ''\n\t},\n\t{\n\t\tpattern: '\\'',\n\t\treplacement: '\\\\\\''\n\t},\n\t{\n\t\tpattern: variablePattern,\n\t\trequiresContext: true,\n\t\treplacement: function(matches, context) {\n\t\t\tvariable = matches[1];\n\t\t\tvar regex = /\\[(?!(?:@|\\*|\\d+)\\]|[\\.$])|^[^\\[]*\\]|\\][^\\[]*\\]|[\\{\\}]/;\n\t\t\tif (regex.test(variable)) {\n\t\t\t\tthrow new Error();\n\t\t\t}\n\t\t\tvar fieldPath = Helpers.getPath(variable);\n\n\t\t\tvariable = 'environment';\n\n\t\t\tif (variable.indexOf('::') > -1) {\n\t\t\t\tvariable += '[' + metaDataVarName + ']';\n\t\t\t} else {\n\t\t\t\tvariable += '[' + dataVarName + ']';\n\t\t\t}\n\n\t\t\tvar hasStarOperator = false;\n\n\t\t\twhile(fieldPath.length > 0) {\n\t\t\t\tpathElement = fieldPath.shift();\n\t\t\t\tif (pathElement === '*') {\n\t\t\t\t\tif (hasStarOperator) {\n\t\t\t\t\t\tvariable += '\")';\n\t\t\t\t\t} else {\n\t\t\t\t\t\thasStarOperator = true;\n\t\t\t\t\t}\n\t\t\t\t\tvariable = '__processStarOperator(' + variable + ', \"';\n\t\t\t\t} else {\n\t\t\t\t\tvariable += '[' + pathElement + ']';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasStarOperator) {\n\t\t\t\tvariable += '\")';\n\t\t\t}\n\t\t\treturn variable;\n\t\t}\n\t}\n];\n\nvar resolveReferences = function(fieldPath, contextPath) {\n\tvar resolveReferences = function(fieldPath, contextPath) {\n\tvar index = 0;\n\tvar contextLength = contextPath.length,\n\t    fieldLength = fieldPath.length;\n\tfor (; index<contextLength && index < fieldLength; index++) {\n\t\tif (fieldPath[index] === '@' && _.isNumber(contextPath[index])) {\n\t\t\tfieldPath[index] = Number(contextPath[index]);\n\t\t} else if (fieldPath[index] !== contextPath[index] || fieldPath[index] === '*') {\n\t\t\tbreak;\n\t\t} else {\n\t\t\tfieldPath[index] = '\\'' + fieldPath[index] + '\\'';\n\t\t}\n\t}\n\tfor (; index < fieldLength; index++) {\n\t\tif (fieldPath[index] === '@') {\n\t\t\tthrow new Error('Context could not fully resolve');\n\t\t} else if (fieldPath[index] === '*') {\n\t\t\tfieldPath[index] = '*';\n\t\t} else if (typeof fieldPath[index] === 'string') {\n\t\t\tfieldPath[index] = '\\'' + fieldPath[index] + '\\'';\n\t\t}\n\t}\n\treturn fieldPath;\n};\n\n};\n\nexport default class Formula extends CompiledExpression {\n\n\tconstructor(expression) {\n\t\tsuper(expression);\n\n\t\tthis._fieldPaths = [];\n\n\t\tconst fieldPathsCache = {};\n\n\t\tfor(var i = 0, size = rules.length; i < size; i++) {\n\t\t\tvar rule = rules[i];\n\t\t\tif (typeof rule.replacement === 'function' && rule.requiresContext) {\n\t\t\t\texpression = expression.replace(new RegExp(rule.pattern, 'g'), function() {\n\t\t\t\t\tlet parsedFieldPath = rule.replacement(arguments, context);\n\t\t\t\t\tif (!fieldPathsCache[parsedFieldPath]) {\n\t\t\t\t\t\tfieldPathsCache[parsedFieldPath] = this._fieldPaths.length;\n\t\t\t\t\t\tthis._fieldPaths.push(parsedFieldPath);\n\t\t\t\t\t}\n\t\t\t\t\treturn fieldPathsVarName + '[' + fieldPathsCache[parsedFieldPath] + ']';\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\texpression = expression.replace(new RegExp(rule.pattern, 'g'), rule.replacement);\n\t\t\t}\n\t\t}\n\n\t\tthis._parsedExpression = expression;\n\n\t}\n\n\tstatic isFormula(expression) {\n\t\treturn 'string' === typeof expression && expression.indexOf('=') === 0;\n\t}\n\n\teval(data, metaData, context) {\n\t\tvar contextPath = Helpers.getPath(context);\n\t\tvar resolvedFieldPaths = this._fieldPaths.map((fieldPath) => resolveReferences(fieldPath, contextPath));\n\n\t\tlet environment = {};\n\t\tenvironment[dataVarName] = data;\n\t\tenvironment[metaDataVarName] = metaData;\n\t\tenvironment[fieldPathsVarName] = resolvedFieldPaths;\n\n\t\tvalue = evalWithSafeEnvironment(this._parsedExpression, environment);\n\t\treturn value;\n\t}\n\n\tgetDependencies() {\n\t\treturn this._fieldPaths.map((fieldPath) => fieldPath.split('::').shift());\n\t}\n\n}\n","import Formula from './Formula';\nimport ConcatenatedText from './ConcatenatedText';\nimport DefaultValue from './DefaultValue';\n\nexport default class FormulaValue {\n\n\tconstructor(expression = '') {\n\t\tif (Formula.isFormula(expression)) {\n\t\t\tthis.compiledExpression = new Formula(expression);\n\t\t} else if (ConcatenatedText.isConcatenatedText(expression)) {\n\t\t\tthis.compiledExpression = new ConcatenatedText();\n\t\t} else {\n\t\t\tthis.compiledExpression = new DefaultValue(expression);\n\t\t}\n\t}\n\n\teval(data = {}, metaData = {}, context = '') {\n\t\treturn this.compiledExpression.eval(data, metaData, context);\n\t}\n\n\tstatic isFormulaValue(expression) {\n\t\treturn Formula.isFormula(expression) || ConcatenatedText.isConcatenatedText(expression);\n\t}\n\n}\n"],"sourceRoot":""}