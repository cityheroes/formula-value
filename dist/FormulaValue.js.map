{"version":3,"sources":["webpack://FormulaValue/webpack/universalModuleDefinition","webpack://FormulaValue/webpack/bootstrap","webpack://FormulaValue/./src/Helpers.js","webpack://FormulaValue/./src/Variable.js","webpack://FormulaValue/./src/CompiledExpression.js","webpack://FormulaValue/external \"underscore\"","webpack://FormulaValue/./src/DefaultValue.js","webpack://FormulaValue/./src/ConcatenatedText.js","webpack://FormulaValue/external \"moment\"","webpack://FormulaValue/./src/Formula.js","webpack://FormulaValue/./src/FormulaValue.js"],"names":["root","factory","exports","module","require","define","amd","global","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__6__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_underscore","_moment","ARRAY_REFERENCE_REGEX","processPath","context","toProcess","split","processed","processArray","completeField","field","arrayValue","push","Number","element","length","shift","replace","assignTo","variable","path","index","pathRoute","pathElement","compact","_","getDateTimeFormat","date","validateOperation","date1format","date2format","unit","evalWithSafeEnvironment","__defaultSpec","__availableSpecs","Y","M","W","D","h","years","months","weeks","days","hours","minutes","seconds","__processStarOperator","array","result","isArray","pushNestedElement","nestedElement","eval","len","forEach","error","console","warn","dateDiff","date1","date2","spec","_moment2","default","diff","sum","total","extract","text","separator","extractedValue","isNaN","flatten","groupConcat","arguments","undefined","join","concat","Array","slice","max","min","count","avg","formatDate","format","isUTC","moment","utc","local","formula","data","metaData","e","patterns","parsedExpression","invalidVariable","dataVarName","metaDataVarName","INVALID_VARIABLE_REGEX","RegExp","Helpers","Variable","_classCallCheck","this","_path","_hasStar","indexOf","_hasAt","_hasContext","_environment","_parsedVariable","_parse","contextPath","_parseWithContext","contextLength","pathLength","fieldPath","isNumber","Error","test","environment","hasStarOperator","parsedVariable","VARIABLE_REGEX","CompiledExpression","rules","expression","_this","_variables","size","rule","pattern","replacement","variablesCache","_parsedExpression","match","variableText","trim","isValid","_CompiledExpression2","DefaultValue","_possibleConstructorReturn","__proto__","getPrototypeOf","CLEANING_RULES","PARSED_EXPRESSION_REGEX","ConcatenatedText","parsedVariables","map","hasStar","parseVariable","number","parseInt","Formula","resolvedParsedExpression","FormulaValue","isFormula","compiledExpression","isConcatenatedText"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,cAAAA,QAAA,WACA,mBAAAC,eAAAC,IACAD,QAAA,uBAAAJ,GACA,iBAAAC,QACAA,QAAA,aAAAD,EAAAG,QAAA,cAAAA,QAAA,WAEAJ,EAAA,aAAAC,EAAAD,EAAA,WAAAA,EAAA,QARA,CASCO,OAAA,SAAAC,+BAAAC,gCACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAV,QAGA,IAAAC,EAAAO,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAZ,YAUA,OANAa,EAAAH,GAAAI,KAAAb,EAAAD,QAAAC,IAAAD,QAAAS,GAGAR,EAAAW,GAAA,EAGAX,EAAAD,QA2CA,OAtCAS,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAjB,EAAAkB,EAAAC,GACAV,EAAAW,EAAApB,EAAAkB,IACAG,OAAAC,eAAAtB,EAAAkB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAA1B,GACAqB,OAAAC,eAAAtB,EAAA,cAAiD2B,OAAA,KAIjDlB,EAAAmB,EAAA,SAAA3B,GACA,IAAAkB,EAAAlB,KAAA4B,WACA,WAA2B,OAAA5B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAQ,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,sHCnEA,IAAAC,YAAA3B,oBAAA,oDACA4B,QAAA5B,oBAAA,oHAEA,IAAM6B,sBAAwB,qBAExBC,YAAc,SAACC,GACpB,IAAKA,EACJ,SAgBD,IAdA,IAAIC,EAAYD,EAAQE,MAAM,SAC7BC,KACAC,EAAe,SAACC,EAAeC,EAAOC,GAMrC,OALAJ,EAAUK,KAAKF,GACI,MAAfC,GAAqC,MAAfA,IACzBA,EAAaE,OAAOF,IAErBJ,EAAUK,KAAKD,GACR,IAKLG,SACET,EAAUU,OAAS,IAExBD,GADAA,EAAUT,EAAUW,SACFC,QAAQf,sBAAuBM,KAEhDD,EAAUK,KAAKE,GAGjB,OAAOP,GAGFW,SAAW,SAACC,EAAUC,EAAMC,EAAO9B,GACxC,IAAI+B,EAAYnB,YAAYiB,QACxB,IAAuBC,GAC1BC,EAAUV,KAAKS,GAIhB,IADA,IAAIE,SACGD,EAAUP,QAChBQ,EAAcD,EAAUN,QACpBM,EAAUP,OAAS,GACjBI,EAASI,KACT,iBAAoBD,EAAU,GACjCH,EAASI,MAETJ,EAASI,OAGXJ,EAAWA,EAASI,IAEpBJ,EAASI,GAAehC,GAKrBiC,QAAU,SAACL,EAAUC,GAG1B,IAFA,IAAIE,EAAYnB,YAAYiB,GAC3BG,SACMD,EAAUP,QAChBQ,EAAcD,EAAUN,QACpBM,EAAUP,OAAS,GACjBI,EAASI,KACT,iBAAoBD,EAAU,GACjCH,EAASI,MAETJ,EAASI,OAGXJ,EAAWA,EAASI,IAEpBJ,EAASI,GAAeE,qBAAED,QAAQL,EAASI,KAKxCG,kBAAoB,SAACC,GAC1B,IAAKA,GAAQ,iBAAoBA,EAChC,MAAO,GAER,OAAQA,EAAKZ,QACZ,KAAK,GACJ,MAAO,aACR,KAAK,GACJ,MAAO,sBACR,KAAK,EACJ,MAAO,WACR,QACC,MAAO,KAIJa,kBAAoB,SAACC,EAAaC,EAAaC,GACpD,OAAQA,GACP,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,OACJ,GAAoB,aAAhBF,GAA8C,aAAhBC,EACjC,OAAO,EAER,MACD,IAAK,QACL,IAAK,UACL,IAAK,UACJ,IAAqB,aAAhBD,GAA8C,aAAhBC,IAA+BD,IAAgBC,EACjF,OAAO,EAMV,OAAO,GAGFE,wBAA2B,WAEhC,IAAMC,cAAgB,UACrBC,kBACCC,EAAG,QACHC,EAAG,SACHC,EAAG,QACHC,EAAG,OACHC,EAAG,QACH5D,EAAG,UACHoB,EAAG,UACHyC,MAAO,QACPC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,QAAS,UACTC,QAAS,WAGLC,sBAAwB,SAAxBA,sBAAyBC,MAAO5B,MACrC,IAAI6B,UACJ,GAAID,OAASvB,qBAAEyB,QAAQF,QAAUA,MAAMjC,OAKtC,IAJA,IAAIxB,aACH4D,kBAAoB,SAApBA,kBAAqBC,eACpB7D,MAAMqB,KAAKyC,KAAK,gBAAkBjC,QAE3B7C,EAAI,EAAG+E,IAAMN,MAAMjC,OAAQxC,EAAI+E,IAAK/E,IAAK,CACjD,GAAIkD,qBAAEyB,QAAQF,MAAMzE,IACnBgB,SACAyD,MAAMzE,GAAGgF,QAAQJ,uBACX,CACN5D,MAAQ,KACR,IACCA,MAAQ8D,KAAK,WAAajC,MACzB,MAAOoC,GACRC,QAAQC,KAAKF,IAGfP,OAAOrC,KAAKrB,OAGd,OAAO0D,QAGFU,SAAW,SAACC,EAAOC,EAAOC,GAC/B,IAAIjC,EAAcH,kBAAkBkC,GACnC9B,EAAcJ,kBAAkBmC,GAEjC,OADAC,EAAO5B,iBAAiB4B,IAAS7B,cAC7BL,kBAAkBC,EAAaC,EAAagC,IAC/CF,GAAQ,EAAAG,SAAAC,SAAOJ,EAAO/B,GACtBgC,GAAQ,EAAAE,SAAAC,SAAOH,EAAO/B,GACf8B,EAAMK,KAAKJ,EAAOC,KAEzBL,QAAQC,KAAK,+BACN,OAIHQ,IAAM,SAAClB,GACZ,IAAImB,EAAQ,EACZ,GAAInB,GAASvB,qBAAEyB,QAAQF,IAAUA,EAAMjC,OACtC,IAAK,IAAIxC,EAAI,EAAG+E,EAAMN,EAAMjC,OAAQxC,EAAI+E,EAAK/E,IACxCyE,EAAMzE,KACT4F,GAASnB,EAAMzE,IAIlB,OAAO4F,GAGFC,QAAU,SAACC,EAAMC,EAAWjD,GACjCgD,EAAO,iBAAoBA,EAAOA,EAAQA,GAAQ,GAClDC,EAAYA,GAAa,IACzBjD,EAAQA,GAAS,EAEjB,IAAIkD,EAAiBF,EAAK/D,MAAMgE,GAAWjD,GAE3C,OAAOmD,MAAMD,GAAkBA,EAAiB1D,OAAO0D,IAGlDE,QAAUhD,qBAAEgD,QAEZC,YAAc,SAAC1B,GAA4B,IAArBsB,EAAqBK,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,GAAT,KACvC,OAAO3B,EAAM6B,KAAKP,IAGnB,SAASQ,SAER,OADeC,MAAMnF,UAAUoF,MAAMtG,KAAKiG,WAC1BE,KAAK,IAEtB,SAASI,IAAI1F,GACZ,OAAIwF,MAAM7B,QAAQ3D,IAAUA,EAAMwB,OAAS,EACnCU,qBAAEwD,IAAI1F,IAEZkE,QAAQC,KAAK,iBACN,MAGV,SAASwB,IAAI3F,GACZ,OAAIwF,MAAM7B,QAAQ3D,IAAUA,EAAMwB,OAAS,EACnCU,qBAAEyD,IAAI3F,IAEZkE,QAAQC,KAAK,iBACN,MAGV,IAAMyB,MAAQ,SAACnC,GACd,OAAOA,EAAMjC,QAGRqE,IAAM,SAACpC,GACZ,IAAImB,EAAQD,IAAIlB,GAIhB,OAHIA,GAASvB,qBAAEyB,QAAQF,IAAUA,EAAMjC,OAAS,IAC/CoD,GAASnB,EAAMjC,QAEToD,GAGFkB,WAAa,SAAC1D,EAAM2D,EAAQC,GACjC,OAAIA,EACIC,iBAAOC,IAAI9D,GAAM+D,QAAQJ,OAAOA,IAEhC,EAAAvB,SAAAC,SAAOrC,GAAM2D,OAAOA,IAI7B,OAAO,SAASK,QAASC,KAAMC,UAC9B,IACC,OAAOxC,KAAKsC,SACX,MAAMG,GACP,MAAO,MAGPpH,wBAGFyB,YAAaA,YACbe,SAAUA,SACVM,QAASA,QACTuE,UACC5E,SAAU,kBACV6E,iBAAkB,qBAClBC,gBAAiB,yFAElBC,YAAa,OACbC,gBAAiB,WACjBnE,wBAAyBA,qWCvQ1B3D,EAAA,QACAA,EAAA,uDAEA,IAAM+H,EAAyB,IAAIC,OAAOC,UAAQP,SAASE,iBAEtCM,aAEpB,SAAAA,EAAYlC,gGAAMmC,CAAAC,KAAAF,GAEjBE,KAAKC,MAAQJ,UAAQnG,YAAYkE,GAEjCoC,KAAKE,SAAWF,KAAKC,MAAME,QAAQ,MAAQ,EAC3CH,KAAKI,OAASJ,KAAKC,MAAME,QAAQ,MAAQ,EACzCH,KAAKK,YAAcL,KAAKI,OAEpBxC,EAAKuC,QAAQ,OAAS,EACzBH,KAAKM,aAAeT,UAAQH,gBAE5BM,KAAKM,aAAeT,UAAQJ,YAGhB,KAAT7B,EACHoC,KAAKO,gBAAkB,OACZP,KAAKK,cAChBL,KAAKO,gBAAkBT,EAASU,OAAOR,KAAKC,MAAOD,KAAKM,+DAI5CG,GACb,OAAQT,KAAKO,iBAAmBP,KAAKU,kBAAkBD,6CAGtCA,GAMjB,IALA,IAAI7F,EAAQ,EACX+F,EAAgBF,EAAYnG,OAC5BsG,EAAaZ,KAAKC,MAAM3F,OACxBuG,EAAYb,KAAKC,MAAM1B,QAEjB3D,EAAQ+F,GAAiB/F,EAAQgG,EAAYhG,IACnD,GAAyB,MAArBiG,EAAUjG,IAAkBI,UAAE8F,SAASL,EAAY7F,IACtDiG,EAAUjG,GAASR,OAAOqG,EAAY7F,SAChC,GAAIiG,EAAUjG,KAAW6F,EAAY7F,IAA+B,MAArBiG,EAAUjG,GAC/D,MAGF,KAAOA,EAAQgG,EAAYhG,IAC1B,GAAyB,MAArBiG,EAAUjG,GACb,MAAM,IAAImG,MAAM,mCAIlB,OAAOjB,EAASU,OAAOK,EAAWb,KAAKM,gDAIvC,OAAON,KAAKE,yCAIZ,OAAOF,KAAKI,yCAGExC,GACd,OAAQ+B,EAAuBqB,KAAKpD,kCAGvBjD,EAAMsG,GAInB,IAHC,IAAInG,SACJoG,GAAkB,EAClBC,EAAiBF,EACTnJ,EAAI,EAAG+E,EAAMlC,EAAKL,OAAQxC,EAAI+E,EAAK/E,IAEvB,OADpBgD,EAAcH,EAAK7C,KAEdoJ,EACHC,GAAkB,KAElBD,GAAkB,EAEnBC,EAAiB,yBAA2BA,EAAiB,MAE7DA,GAAkB,KAAQrG,EAAc,KAM1C,OAHIoG,IACHC,GAAkB,MAEZA,qBAjFYrB,8UCLrBlI,EAAA,QACAA,EAAA,uDAEA,IAAMwJ,EAAiB,IAAIxB,OAAOC,UAAQP,SAAS5E,SAAU,KAExC2G,aAEpB,SAAAA,EAAYC,EAAOC,GAAY,IAAAC,EAAAxB,kGAAAD,CAAAC,KAAAqB,GAC9BrB,KAAKyB,cAEL,IAAK,IAAI3J,EAAI,EAAG4J,EAAOJ,EAAMhH,OAAQxC,EAAI4J,EAAM5J,IAAK,CACnD,IAAI6J,EAAOL,EAAMxJ,GACjByJ,EAAaA,EAAW/G,QAAQ,IAAIoF,OAAO+B,EAAKC,QAAS,KAAMD,EAAKE,aAGrE,IAAMC,KACN9B,KAAK+B,kBAAoBR,EAAW/G,QAAQ4G,EAAgB,SAACY,EAAOC,GAEnE,OADAA,EAAeA,EAAaC,OACxBpC,UAASqC,QAAQF,IACfH,EAAeG,KACnBH,EAAeG,GAAgBT,EAAKC,WAAWnH,OAC/CkH,EAAKC,WAAWtH,KAAK,IAAI2F,UAASmC,KAE5B,KAAOH,EAAeG,GAAgB,MAEtC,KAAOA,EAAe,gDAM/B,MAAM,IAAIlB,MAAM,qEAIhB,MAAM,IAAIA,MAAM,yDA9BGM,iBCLrBjK,EAAAD,QAAAM,yWCAA2K,EAAAxK,EAAA,2CAEqByK,cAEpB,SAAAA,EAAYd,gGAAYxB,CAAAC,KAAAqC,GAAA,IAAAb,mKAAAc,CAAAtC,MAAAqC,EAAAE,WAAA/J,OAAAgK,eAAAH,IAAApK,KAAA+H,QACb,KADa,OAEvBwB,EAAK1I,MAAQyI,EAFUC,qUAFiBH,6CAQxC,OAAOrB,KAAKlH,yBAROuJ,8UCFrBzK,EAAA,QACAA,EAAA,MACAA,EAAA,uDAEA,IAAM6K,IACJb,QAAS,IACTC,YAAa,QAEdT,EAAiB,IAAIxB,OAAOC,UAAQP,SAAS5E,UAC7CgI,EAA0B,IAAI9C,OAAOC,UAAQP,SAASC,iBAAiB,KAEnDoD,cAEpB,SAAAA,IAA6B,IAAjBpB,EAAiBrD,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAAI,mGAAA6B,CAAAC,KAAA2C,oKAAAL,CAAAtC,MAAA2C,EAAAJ,WAAA/J,OAAAgK,eAAAG,IAAA1K,KAAA+H,KACtByC,EAAgBlB,uUAHsBF,2CAMxClC,EAAMC,EAAUzF,GACpB,IAAI6C,EAAS,GACb,IACC,IAAIiE,EAAcZ,UAAQnG,YAAYC,GAElCiJ,EAAkB5C,KAAKyB,WAAWoB,IAAI,SAACnI,GAC1C,OAAIA,EAASoI,UACL,GAEDjD,UAAQtE,wBACdb,EAASqI,cAActC,GACvBtB,EACAC,KAIF5C,EAASwD,KAAK+B,kBAAkBvH,QAC/BkI,EACA,SAACV,EAAOgB,GACP,OAAOJ,EAAgBK,SAASD,MAEjC,MAAOjG,GACRC,QAAQC,KAAKF,GAEd,OAAOP,4CAIP,OAAOwD,KAAKyB,WAAWoB,IAAI,SAAChC,GAAD,OAAeA,EAAUhH,MAAM,MAAMU,uDAGvCgH,GACzB,MAAO,iBAAoBA,GAAcH,EAAeJ,KAAKO,sBAtC1CoB,iBCXrBvL,EAAAD,QAAAO,2WCAAE,EAAA,SACAA,EAAA,MACAA,EAAA,wDAEA,IAAI6K,IAEFb,QAAS,KACTC,YAAa,KAGbD,QAAS,IACTC,YAAa,QAIMqB,cAEpB,SAAAA,EAAY3B,GAAY,mGAAAxB,CAAAC,KAAAkD,oKAAAZ,CAAAtC,MAAAkD,EAAAX,WAAA/J,OAAAgK,eAAAU,IAAAjL,KAAA+H,KACjByC,EAAgBlB,uUAHaF,2CAM/BlC,EAAMC,EAAUzF,GACpB,IAAI6C,EAAS,KACb,IACC,IAAIiE,EAAcZ,UAAQnG,YAAYC,GAClCiJ,EAAkB5C,KAAKyB,WAAWoB,IAAI,SAACnI,GAC1C,OAAOA,EAASqI,cAActC,KAE3B0C,EAA2BnD,KAAK+B,kBAAkBvH,QAAQ,iBAAkB,SAACwH,EAAOgB,GACvF,OAAOJ,EAAgBK,SAASD,MAEjCxG,EAASqD,UAAQtE,wBAAwB4H,EAA0BhE,EAAMC,GACxE,MAAOrC,GACRC,QAAQC,KAAKF,GAEd,OAAOP,4CAIP,OAAOwD,KAAKyB,WAAWoB,IAAI,SAAChC,GAAD,OAAeA,EAAUhH,MAAM,MAAMU,8CAGhDgH,GAChB,MAAO,iBAAoBA,GAA0C,IAA5BA,EAAWpB,QAAQ,wBA5BzC+C,8UCfrBtL,EAAA,QACAA,EAAA,QACAA,EAAA,2DAEqBwL,aAEpB,SAAAA,IAA6B,IAAjB7B,EAAiBrD,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,GAAJ,gGAAI6B,CAAAC,KAAAoD,GACxBF,UAAQG,UAAU9B,GACrBvB,KAAKsD,mBAAqB,IAAIJ,UAAQ3B,GAC5BoB,UAAiBY,mBAAmBhC,GAC9CvB,KAAKsD,mBAAqB,IAAIX,UAAiBpB,GAE/CvB,KAAKsD,mBAAqB,IAAIjB,UAAad,4CAIA,IAAxCpC,EAAwCjB,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,MAA7BkB,EAA6BlB,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,MAAdvE,EAAcuE,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACxC,OAAO8B,KAAKsD,mBAAmB1G,KAAKuC,EAAMC,EAAUzF,4CAG/B4H,GACrB,OAAO2B,UAAQG,UAAU9B,IAAeoB,UAAiBY,mBAAmBhC,sBAjBzD6B","file":"FormulaValue.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"underscore\"), require(\"moment\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"underscore\", \"moment\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FormulaValue\"] = factory(require(\"underscore\"), require(\"moment\"));\n\telse\n\t\troot[\"FormulaValue\"] = factory(root[\"underscore\"], root[\"moment\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__6__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import _ from 'underscore';\nimport moment from 'moment';\n\nconst ARRAY_REFERENCE_REGEX = /(.*)\\[(@|\\*|\\d+)]/g;\n\nconst processPath = (context) => {\n\tif (!context) {\n\t\treturn [];\n\t}\n\tlet toProcess = context.split(/\\.|::/),\n\t\tprocessed = [],\n\t\tprocessArray = (completeField, field, arrayValue) => {\n\t\t\tprocessed.push(field);\n\t\t\tif (arrayValue !== '@' && arrayValue !== '*') {\n\t\t\t\tarrayValue = Number(arrayValue);\n\t\t\t}\n\t\t\tprocessed.push(arrayValue);\n\t\t\treturn '';\n\t\t};\n\n\t// Use of .shift() was preferred over other iteration methods for performance reasons.\n\t// check this test: https://jsperf.com/shift-vs-traditional-loop\n\tlet element;\n\twhile(toProcess.length > 0) {\n\t\telement = toProcess.shift();\n\t\telement = element.replace(ARRAY_REFERENCE_REGEX, processArray);\n\t\tif (element) {\n\t\t\tprocessed.push(element);\n\t\t}\n\t}\n\treturn processed;\n};\n\nconst assignTo = (variable, path, index, value) => {\n\tlet pathRoute = processPath(path);\n\tif ('undefined' !== typeof index) {\n\t\tpathRoute.push(index);\n\t}\n\n\tlet pathElement;\n\twhile (pathRoute.length) {\n\t\tpathElement = pathRoute.shift();\n\t\tif (pathRoute.length > 0) {\n\t\t\tif (!variable[pathElement]) {\n\t\t\t\tif ('number' === typeof pathRoute[0]) {\n\t\t\t\t\tvariable[pathElement] = [];\n\t\t\t\t} else {\n\t\t\t\t\tvariable[pathElement] = {};\n\t\t\t\t}\n\t\t\t}\n\t\t\tvariable = variable[pathElement];\n\t\t} else {\n\t\t\tvariable[pathElement] = value;\n\t\t}\n\t}\n};\n\nconst compact = (variable, path) => {\n\tlet pathRoute = processPath(path),\n\t\tpathElement;\n\twhile (pathRoute.length) {\n\t\tpathElement = pathRoute.shift();\n\t\tif (pathRoute.length > 0) {\n\t\t\tif (!variable[pathElement]) {\n\t\t\t\tif ('number' === typeof pathRoute[0]) {\n\t\t\t\t\tvariable[pathElement] = [];\n\t\t\t\t} else {\n\t\t\t\t\tvariable[pathElement] = {};\n\t\t\t\t}\n\t\t\t}\n\t\t\tvariable = variable[pathElement];\n\t\t} else {\n\t\t\tvariable[pathElement] = _.compact(variable[pathElement]);\n\t\t}\n\t}\n};\n\nconst getDateTimeFormat = (date) => {\n\tif (!date || 'string' !== typeof date) {\n\t\treturn '';\n\t}\n\tswitch (date.length) {\n\t\tcase 10:\n\t\t\treturn 'YYYY-MM-DD';\n\t\tcase 19:\n\t\t\treturn 'YYYY-MM-DD HH:mm:ss';\n\t\tcase 8:\n\t\t\treturn 'HH:mm:ss';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nconst validateOperation = (date1format, date2format, unit) => {\n\tswitch (unit) {\n\t\tcase 'years':\n\t\tcase 'months':\n\t\tcase 'weeks':\n\t\tcase 'days':\n\t\t\tif (date1format === 'HH:mm:ss' || date2format === 'HH:mm:ss') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'hours':\n\t\tcase 'minutes':\n\t\tcase 'seconds':\n\t\t\tif ((date1format === 'HH:mm:ss' || date2format === 'HH:mm:ss') && date1format !== date2format) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn true;\n};\n\nconst evalWithSafeEnvironment = (function () {\n\n\tconst __defaultSpec = 'seconds',\n\t\t__availableSpecs = {\n\t\t\tY: 'years',\n\t\t\tM: 'months',\n\t\t\tW: 'weeks',\n\t\t\tD: 'days',\n\t\t\th: 'hours',\n\t\t\tm: 'minutes',\n\t\t\ts: 'seconds',\n\t\t\tyears: 'years',\n\t\t\tmonths: 'months',\n\t\t\tweeks: 'weeks',\n\t\t\tdays: 'days',\n\t\t\thours: 'hours',\n\t\t\tminutes: 'minutes',\n\t\t\tseconds: 'seconds'\n\t\t};\n\n\tconst __processStarOperator = (array, path) => {\n\t\tlet result = [];\n\t\tif (array && _.isArray(array) && array.length) {\n\t\t\tlet value,\n\t\t\t\tpushNestedElement = (nestedElement) => {\n\t\t\t\t\tvalue.push(eval('nestedElement' + path));\n\t\t\t\t};\n\t\t\tfor (let i = 0, len = array.length; i < len; i++) {\n\t\t\t\tif (_.isArray(array[i])) {\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tarray[i].forEach(pushNestedElement);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = eval('array[i]' + path);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.warn(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult.push(value);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\tconst dateDiff = (date1, date2, spec) => {\n\t\tlet date1format = getDateTimeFormat(date1),\n\t\t\tdate2format = getDateTimeFormat(date2);\n\t\tspec = __availableSpecs[spec] || __defaultSpec;\n\t\tif (validateOperation(date1format, date2format, spec)) {\n\t\t\tdate1 = moment(date1, date1format);\n\t\t\tdate2 = moment(date2, date2format);\n\t\t\treturn date1.diff(date2, spec);\n\t\t} else {\n\t\t\tconsole.warn('Invalid inputs at dateDiff.');\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tconst sum = (array) => {\n\t\tlet total = 0;\n\t\tif (array && _.isArray(array) && array.length) {\n\t\t\tfor (let i = 0, len = array.length; i < len; i++) {\n\t\t\t\tif (array[i]) {\n\t\t\t\t\ttotal += array[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn total;\n\t};\n\n\tconst extract = (text, separator, index) => {\n\t\ttext = 'string' === typeof text ? text : (text || '');\n\t\tseparator = separator || ',';\n\t\tindex = index || 0;\n\n\t\tlet extractedValue = text.split(separator)[index];\n\n\t\treturn isNaN(extractedValue) ? extractedValue : Number(extractedValue);\n\t};\n\n\tconst flatten = _.flatten;\n\n\tconst groupConcat = (array, separator = ', ') => {\n\t\treturn array.join(separator);\n\t};\n\n\tfunction concat() {\n\t\tvar elements = Array.prototype.slice.call(arguments);\n\t\treturn elements.join('');\n\t}\n\tfunction max(value) {\n\t\tif (Array.isArray(value) && value.length > 0) {\n\t\t\treturn _.max(value);\n\t\t} else {\n\t\t\t\tconsole.warn('Invalid array');\n\t\t\t\treturn null;\n\t\t};\n\t};\n\tfunction min(value) {\n\t\tif (Array.isArray(value) && value.length > 0) {\n\t\t\treturn _.min(value)\n\t\t} else {\n\t\t\t\tconsole.warn('Invalid array');\n\t\t\t\treturn null;\n\t\t};\n\t};\n\tconst count = (array) => {\n\t\treturn array.length;\n\t};\n\n\tconst avg = (array) => {\n\t\tlet total = sum(array);\n\t\tif (array && _.isArray(array) && array.length > 0) {\n\t\t\ttotal /= array.length;\n\t\t}\n\t\treturn total;\n\t};\n\n\tconst formatDate = (date, format, isUTC) => {\n\t\tif (isUTC) {\n\t\t\treturn moment.utc(date).local().format(format);\n\t\t} else {\n\t\t\treturn moment(date).format(format);\n\t\t}\n\t};\n\n\treturn function(formula, data, metaData) {\n\t\ttry {\n\t\t\treturn eval(formula);\n\t\t} catch(e) {\n\t\t\treturn '';\n\t\t}\n\t};\n}).call();\n\nexport default {\n\tprocessPath: processPath,\n\tassignTo: assignTo,\n\tcompact: compact,\n\tpatterns: {\n\t\tvariable: '{{\\s?([^}]+)\\s?}}',\n\t\tparsedExpression: '\\\\[\\\\*(\\\\d*)\\\\*\\\\]',\n\t\tinvalidVariable: '\\\\[(?!(?:@|\\\\*|\\\\d+)\\\\]|[\\\\.$])|^[^\\\\[]*\\\\]|\\\\][^\\\\[]*\\\\]|[\\\\{\\\\}]|\\\\][]|\\\\][^\\\\.\\\\[]'\n\t},\n\tdataVarName: 'data',\n\tmetaDataVarName: 'metaData',\n\tevalWithSafeEnvironment: evalWithSafeEnvironment\n};\n","import _ from 'underscore';\nimport Helpers from './Helpers';\n\nconst INVALID_VARIABLE_REGEX = new RegExp(Helpers.patterns.invalidVariable);\n\nexport default class Variable {\n\n\tconstructor(text) {\n\n\t\tthis._path = Helpers.processPath(text);\n\n\t\tthis._hasStar = this._path.indexOf('*') > -1;\n\t\tthis._hasAt = this._path.indexOf('@') > -1;\n\t\tthis._hasContext = this._hasAt;\n\n\t\tif (text.indexOf('::') > -1) {\n\t\t\tthis._environment = Helpers.metaDataVarName;\n\t\t} else {\n\t\t\tthis._environment = Helpers.dataVarName;\n\t\t}\n\n\t\tif (text === '') {\n\t\t\tthis._parsedVariable = 'null';\n\t\t} else if (!this._hasContext) {\n\t\t\tthis._parsedVariable = Variable._parse(this._path, this._environment);\n\t\t}\n\t}\n\n\tparseVariable(contextPath) {\n\t\treturn (this._parsedVariable || this._parseWithContext(contextPath));\n\t}\n\n\t_parseWithContext(contextPath) {\n\t\tlet index = 0,\n\t\t\tcontextLength = contextPath.length,\n\t\t\tpathLength = this._path.length,\n\t\t\tfieldPath = this._path.slice();\n\n\t\tfor (; index < contextLength && index < pathLength; index++) {\n\t\t\tif (fieldPath[index] === '@' && _.isNumber(contextPath[index])) {\n\t\t\t\tfieldPath[index] = Number(contextPath[index]);\n\t\t\t} else if (fieldPath[index] !== contextPath[index] || fieldPath[index] === '*') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (; index < pathLength; index++) {\n\t\t\tif (fieldPath[index] === '@') {\n\t\t\t\tthrow new Error('Context could not fully resolve');\n\t\t\t}\n\t\t}\n\n\t\treturn Variable._parse(fieldPath, this._environment);\n\t}\n\n\thasStar() {\n\t\treturn this._hasStar;\n\t}\n\n\thasAt() {\n\t\treturn this._hasAt;\n\t}\n\n\tstatic isValid(text) {\n\t\treturn !INVALID_VARIABLE_REGEX.test(text);\n\t}\n\n\tstatic _parse(path, environment) {\n \t\tlet pathElement,\n\t\t\thasStarOperator = false,\n\t\t\tparsedVariable = environment;\n\t\tfor (let i = 0, len = path.length; i < len; i++) {\n\t\t\tpathElement = path[i];\n\t\t\tif (pathElement === '*') {\n\t\t\t\tif (hasStarOperator) {\n\t\t\t\t\tparsedVariable += '\")';\n\t\t\t\t} else {\n\t\t\t\t\thasStarOperator = true;\n\t\t\t\t}\n\t\t\t\tparsedVariable = '__processStarOperator(' + parsedVariable + ',\"';\n\t\t\t} else {\n\t\t\t\tparsedVariable += '[\\'' + pathElement + '\\']';\n\t\t\t}\n\t\t}\n\t\tif (hasStarOperator) {\n\t\t\tparsedVariable += '\")';\n\t\t}\n\t\treturn parsedVariable;\n\t}\n\n}\n","import Variable from './Variable';\nimport Helpers from './Helpers';\n\nconst VARIABLE_REGEX = new RegExp(Helpers.patterns.variable, 'g');\n\nexport default class CompiledExpression {\n\n\tconstructor(rules, expression) {\n\t\tthis._variables = [];\n\n\t\tfor (var i = 0, size = rules.length; i < size; i++) {\n\t\t\tvar rule = rules[i];\n\t\t\texpression = expression.replace(new RegExp(rule.pattern, 'g'), rule.replacement);\n\t\t}\n\n\t\tconst variablesCache = {};\n\t\tthis._parsedExpression = expression.replace(VARIABLE_REGEX, (match, variableText) => {\n\t\t\tvariableText = variableText.trim();\n\t\t\tif (Variable.isValid(variableText)) {\n\t\t\t\tif (!variablesCache[variableText]) {\n\t\t\t\t\tvariablesCache[variableText] = this._variables.length;\n\t\t\t\t\tthis._variables.push(new Variable(variableText));\n\t\t\t\t}\n\t\t\t\treturn '[*' + variablesCache[variableText] + '*]';\n\t\t\t} else {\n\t\t\t\treturn '{{' + variableText + '}}';\n\t\t\t}\n\t\t});\n\t}\n\n\teval() {\n\t\tthrow new Error('Eval is not implemented');\n\t}\n\n\tgetDependencies() {\n\t\tthrow new Error('GetDependencies is not implemented');\n\t}\n\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","import CompiledExpression from './CompiledExpression';\n\nexport default class DefaultValue extends CompiledExpression {\n\n\tconstructor(expression) {\n\t\tsuper([], '');\n\t\tthis.value = expression;\n\t}\n\n\teval() {\n\t\treturn this.value;\n\t}\n\n}\n","import Helpers from './Helpers';\nimport CompiledExpression from './CompiledExpression';\nimport Variable from './Variable';\n\nconst CLEANING_RULES = [{\n\t\tpattern: '\\'',\n\t\treplacement: '\\\\\\''\n\t}],\n\tVARIABLE_REGEX = new RegExp(Helpers.patterns.variable),\n\tPARSED_EXPRESSION_REGEX = new RegExp(Helpers.patterns.parsedExpression,'g');\n\nexport default class ConcatenatedText extends CompiledExpression {\n\n\tconstructor(expression = '') {\n\t\tsuper(CLEANING_RULES, expression);\n\t}\n\n\teval(data, metaData, context) {\n\t\tlet result = '';\n\t\ttry {\n\t\t\tlet contextPath = Helpers.processPath(context);\n\n\t\t\tlet parsedVariables = this._variables.map((variable) => {\n\t\t\t\tif (variable.hasStar()) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\treturn Helpers.evalWithSafeEnvironment(\n\t\t\t\t\tvariable.parseVariable(contextPath),\n\t\t\t\t\tdata,\n\t\t\t\t\tmetaData\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tresult = this._parsedExpression.replace(\n\t\t\t\tPARSED_EXPRESSION_REGEX,\n\t\t\t\t(match, number) => {\n\t\t\t\t\treturn parsedVariables[parseInt(number)];\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.warn(error);\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetDependencies() {\n\t\treturn this._variables.map((fieldPath) => fieldPath.split('::').shift());\n\t}\n\n\tstatic isConcatenatedText(expression) {\n\t\treturn 'string' === typeof expression && VARIABLE_REGEX.test(expression);\n\t}\n\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","import CompiledExpression from './CompiledExpression';\nimport Variable from './Variable';\nimport Helpers from './Helpers';\n\nvar CLEANING_RULES = [\n\t{\n\t\tpattern: '^=',\n\t\treplacement: ''\n\t},\n\t{\n\t\tpattern: '\\'',\n\t\treplacement: '\\\\\\''\n\t}\n];\n\nexport default class Formula extends CompiledExpression {\n\n\tconstructor(expression) {\n\t\tsuper(CLEANING_RULES, expression);\n\t}\n\n\teval(data, metaData, context) {\n\t\tlet result = null;\n\t\ttry {\n\t\t\tlet contextPath = Helpers.processPath(context);\n\t\t\tlet parsedVariables = this._variables.map((variable) => {\n\t\t\t\treturn variable.parseVariable(contextPath);\n\t\t\t});\n\t\t\tlet resolvedParsedExpression = this._parsedExpression.replace(/\\[\\*(\\d*)\\*\\]/g, (match, number) => {\n\t\t\t\treturn parsedVariables[parseInt(number)];\n\t\t\t});\n\t\t\tresult = Helpers.evalWithSafeEnvironment(resolvedParsedExpression, data, metaData);\n\t\t} catch (error) {\n\t\t\tconsole.warn(error);\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetDependencies() {\n\t\treturn this._variables.map((fieldPath) => fieldPath.split('::').shift());\n\t}\n\n\tstatic isFormula(expression) {\n\t\treturn 'string' === typeof expression && expression.indexOf('=') === 0;\n\t}\n\n}\n","import Formula from './Formula';\nimport ConcatenatedText from './ConcatenatedText';\nimport DefaultValue from './DefaultValue';\n\nexport default class FormulaValue {\n\n\tconstructor(expression = '') {\n\t\tif (Formula.isFormula(expression)) {\n\t\t\tthis.compiledExpression = new Formula(expression);\n\t\t} else if (ConcatenatedText.isConcatenatedText(expression)) {\n\t\t\tthis.compiledExpression = new ConcatenatedText(expression);\n\t\t} else {\n\t\t\tthis.compiledExpression = new DefaultValue(expression);\n\t\t}\n\t}\n\n\teval(data = {}, metaData = {}, context = '') {\n\t\treturn this.compiledExpression.eval(data, metaData, context);\n\t}\n\n\tstatic isFormulaValue(expression) {\n\t\treturn Formula.isFormula(expression) || ConcatenatedText.isConcatenatedText(expression);\n\t}\n\n}\n"],"sourceRoot":""}