{"version":3,"sources":["webpack://FormulaValue/webpack/universalModuleDefinition","webpack://FormulaValue/webpack/bootstrap","webpack://FormulaValue/./src/Helpers.js","webpack://FormulaValue/external \"underscore\"","webpack://FormulaValue/./src/CompiledExpression.js","webpack://FormulaValue/./src/DefaultValue.js","webpack://FormulaValue/./src/ConcatenatedText.js","webpack://FormulaValue/external \"moment\"","webpack://FormulaValue/./src/Variable.js","webpack://FormulaValue/./src/Formula.js","webpack://FormulaValue/./src/FormulaValue.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_underscore","getPath","context","toProcess","split","processed","length","element","shift","replace","completeField","field","arrayValue","push","Number","assignTo","variable","path","index","pathRoute","pathElement","nextPathElement","compact","_","patterns","dataVarName","metaDataVarName","CompiledExpression","Error","_CompiledExpression2","DefaultValue","expression","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","ConcatenatedText","indexOf","Helpers","variablePattern","variableRegex","Variable","text","test","_hasContext","tempPath","tempPathElement","_path","_environment","_parsedVariable","parsedVariable","len","contextPath","_parseWithEnvironment","contextLength","pathLength","fieldPath","isNumber","hasStarOperator","_Variable","_Helpers","_moment","getDateTimeFormat","date","validateOperation","date1format","date2format","unit","evalWithSafeEnvironment","__availableSpecs","Y","M","W","D","h","years","months","weeks","days","hours","minutes","seconds","__defaultSpec","__processStarOperator","array","result","isArray","forEach","nestedElement","eval","error","console","warn","dateDiff","date1","date2","spec","_moment2","default","diff","sum","total","extract","separator","extractedValue","isNaN","flatten","shallow","groupConcat","join","concat","Array","slice","arguments","count","avg","formula","data","metaData","rules","pattern","replacement","Formula","_variables","variablesCache","size","rule","RegExp","_parsedExpression","match","variableText","parsedVariables","map","parseVariable","resolvedParsedExpression","number","parseInt","FormulaValue","undefined","isFormula","compiledExpression","isConcatenatedText"],"mappings":"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","file":"FormulaValue.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"underscore\"), require(\"moment\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"underscore\", \"moment\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FormulaValue\"] = factory(require(\"underscore\"), require(\"moment\"));\n\telse\n\t\troot[\"FormulaValue\"] = factory(root[\"underscore\"], root[\"moment\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__5__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import _ from 'underscore';\n\nlet getPath = (context) => {\n\tif (!context) {\n\t\treturn [];\n\t}\n\tvar toProcess = context.split(/\\.|::/);\n\tvar path;\n\tvar processed = [];\n\n\t// Use of .shift() was preferred over other iteration methods for performance reasons.\n\t// check this test: https://jsperf.com/shift-vs-traditional-loop\n\n\twhile(toProcess.length > 0) {\n\t\tvar element = toProcess.shift();\n\t\telement = element.replace(/(.*)\\[(@|\\*|\\d+)]/g, function(completeField, field, arrayValue) {\n\t\t\tprocessed.push(field);\n\t\t\tif (arrayValue !== '@' && arrayValue !== '*') {\n\t\t\t\tarrayValue = Number(arrayValue);\n\t\t\t}\n\t\t\tprocessed.push(arrayValue);\n\t\t\treturn '';\n\t\t});\n\t\tif (element) {\n\t\t\tprocessed.push(element);\n\t\t}\n\t}\n\treturn processed;\n};\n\nlet assignTo = (variable, path, index, value) => {\n\tvar pathRoute = getPath(path);\n\tif ('undefined' !== typeof index) {\n\t\tpathRoute.push(index);\n\t}\n\twhile (pathRoute.length) {\n\t\tvar pathElement = pathRoute.shift();\n\t\tif (pathRoute.length > 0) {\n\t\t\tif (!variable[pathElement]) {\n\t\t\t\tvar nextPathElement = pathRoute[0];\n\t\t\t\tif ('number' === typeof nextPathElement) {\n\t\t\t\t\tvariable[pathElement] = [];\n\t\t\t\t} else {\n\t\t\t\t\tvariable[pathElement] = {};\n\t\t\t\t}\n\t\t\t}\n\t\t\tvariable = variable[pathElement];\n\t\t} else {\n\t\t\tvariable[pathElement] = value;\n\t\t}\n\t}\n};\n\nlet compact = (variable, path) => {\n\tvar pathRoute = getPath(path);\n\twhile (pathRoute.length) {\n\t\tvar pathElement = pathRoute.shift();\n\t\tif (pathRoute.length > 0) {\n\t\t\tif (!variable[pathElement]) {\n\t\t\t\tvar nextPathElement = pathRoute[0];\n\t\t\t\tif ('number' === typeof nextPathElement) {\n\t\t\t\t\tvariable[pathElement] = [];\n\t\t\t\t} else {\n\t\t\t\t\tvariable[pathElement] = {};\n\t\t\t\t}\n\t\t\t}\n\t\t\tvariable = variable[pathElement];\n\t\t} else {\n\t\t\tvariable[pathElement] = _.compact(variable[pathElement]);\n\t\t}\n\t}\n};\n\nexport default {\n\n\tgetPath: getPath,\n\tassignTo: assignTo,\n\tcompact: compact,\n\tpatterns: {\n\t\tvariable: '{{([^}]+)}}'\n\t},\n\tdataVarName: 'data',\n\tmetaDataVarName: 'metaData'\n\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","export default class CompiledExpression {\n\n\teval() {\n\t\tthrow new Error('Eval is not implemented');\n\t}\n\n}\n","import CompiledExpression from './CompiledExpression';\n\nexport default class DefaultValue extends CompiledExpression {\n\n\tconstructor(expression) {\n\t\tsuper();\n\n\t\tthis.value = expression;\n\t}\n\n\teval() {\n\t\treturn this.value;\n\t}\n\n}\n","import Helpers from './Helpers';\nimport CompiledExpression from './CompiledExpression';\n\nexport default class ConcatenatedText extends CompiledExpression {\n\n\tconstructor(expression) {\n\t\tsuper();\n\t}\n\n\tstatic isConcatenatedText(expression) {\n\t\treturn 'string' === typeof expression && expression.indexOf(Helpers.variablePattern) > -1;\n\t}\n\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","import _ from 'underscore';\nimport Helpers from './Helpers';\n\nconst variableRegex = /\\[(?!(?:@|\\*|\\d+)\\]|[\\.$])|^[^\\[]*\\]|\\][^\\[]*\\]|[\\{\\}]/;\n\nexport default class Variable {\n\n\tconstructor(text) {\n\n\n\t\tif (variableRegex.test(text)) {\n\t\t\ttext = '';\n\t\t}\n\n\t\tthis._hasContext = false;\n\n\t\tlet tempPath = Helpers.getPath(text);\n\n\t\tlet tempPathElement;\n\t\tfor (let i = tempPath.length - 1; i >= 0; i--) {\n\t\t\ttempPathElement = tempPath[i];\n\t\t\tif (tempPathElement !== '@' && tempPathElement !== '*') {\n\t\t\t\ttempPath[i] = tempPathElement;\n\t\t\t} else {\n\t\t\t\tthis._hasContext = true;\n\t\t\t}\n\t\t}\n\n\t\tthis._path = tempPath;\n\n\t\tif (text.indexOf('::') > -1) {\n\t\t\tthis._environment = Helpers.metaDataVarName;\n\t\t} else {\n\t\t\tthis._environment = Helpers.dataVarName;\n\t\t}\n\n\t\tif (text === '') {\n\t\t\tthis._parsedVariable = 'null';\n\t\t} else if (!this._hasContext) {\n\t\t\tlet parsedVariable = this._environment;\n\t\t\tfor (var i = 0, len = tempPath.length; i < len; i++) {\n\t\t\t\tparsedVariable += '[\\'' + tempPath[i] + '\\']';\n\t\t\t}\n\t\t\tthis._parsedVariable = parsedVariable;\n\t\t}\n\t}\n\n\tparseVariable(contextPath) {\n\t\treturn (this._parsedVariable || this._parseWithEnvironment(contextPath));\n\t}\n\n\t_parseWithEnvironment(contextPath) {\n\t\tlet index = 0,\n\t\t\tcontextLength = contextPath.length,\n\t\t\tpathLength = this._path.length,\n\t\t\tfieldPath = this._path;\n\n\t\tfor (; index<contextLength && index < pathLength; index++) {\n\t\t\tif (fieldPath[index] === '@' && _.isNumber(contextPath[index])) {\n\t\t\t\tfieldPath[index] = Number(contextPath[index]);\n\t\t\t} else if (fieldPath[index] !== contextPath[index] || fieldPath[index] === '*') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (; index < pathLength; index++) {\n\t\t\tif (fieldPath[index] === '@') {\n\t\t\t\tthrow new Error('Context could not fully resolve');\n\t\t\t} else if (fieldPath[index] === '*') {\n\t\t\t\tfieldPath[index] = '*';\n\t\t\t}\n\t\t}\n\n\t\tlet pathElement,\n\t\t\thasStarOperator = false,\n\t\t\tparsedVariable = this._environment;\n\t\tfor (var i = 0, len = this._path.length; i < len; i++) {\n\t\t\tpathElement = this._path[i];\n\t\t\tif (pathElement === '*') {\n\t\t\t\tif (hasStarOperator) {\n\t\t\t\t\tparsedVariable += '\")';\n\t\t\t\t} else {\n\t\t\t\t\thasStarOperator = true;\n\t\t\t\t}\n\t\t\t\tparsedVariable = '__processStarOperator(' + parsedVariable + ',\"';\n\t\t\t} else {\n\t\t\t\tparsedVariable += '[\\'' + pathElement + '\\']';\n\t\t\t}\n\t\t}\n\n\t\tif (hasStarOperator) {\n\t\t\tparsedVariable += '\")';\n\t\t}\n\t\treturn parsedVariable;\n\t}\n\n}\n","import CompiledExpression from './CompiledExpression';\nimport Variable from './Variable';\nimport Helpers from './Helpers';\nimport _ from 'underscore';\nimport moment from 'moment';\n\nvar dataVarName = 'data',\n\tmetaDataVarName = 'metaData';\n\nvar getDateTimeFormat = function(date) {\n\tif (!date || typeof date !== 'string') {\n\t\treturn '';\n\t}\n\tswitch (date.length) {\n\t\tcase 10:\n\t\t\treturn 'YYYY-MM-DD';\n\t\tcase 19:\n\t\t\treturn 'YYYY-MM-DD HH:mm:ss';\n\t\tcase 8:\n\t\t\treturn 'HH:mm:ss';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nvar validateOperation = function(date1format, date2format, unit) {\n\tswitch (unit) {\n\t\tcase 'years':\n\t\tcase 'months':\n\t\tcase 'weeks':\n\t\tcase 'days':\n\t\t\tif (date1format === 'HH:mm:ss' || date2format === 'HH:mm:ss') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'hours':\n\t\tcase 'minutes':\n\t\tcase 'seconds':\n\t\t\tif ((date1format === 'HH:mm:ss' || date2format === 'HH:mm:ss') && date1format !== date2format) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn true;\n};\n\nvar evalWithSafeEnvironment = (function () {\n\n\tvar __availableSpecs = {\n\t\tY: 'years',\n\t\tM: 'months',\n\t\tW: 'weeks',\n\t\tD: 'days',\n\t\th: 'hours',\n\t\tm: 'minutes',\n\t\ts: 'seconds',\n\t\tyears: 'years',\n\t\tmonths: 'months',\n\t\tweeks: 'weeks',\n\t\tdays: 'days',\n\t\thours: 'hours',\n\t\tminutes: 'minutes',\n\t\tseconds: 'seconds'\n\t};\n\tvar __defaultSpec = 'seconds';\n\n\tvar __processStarOperator = function(array, path) {\n\t\tvar result = [];\n\t\tif (array && _.isArray(array) && array.length) {\n\t\t\tfor (var i = 0, len = array.length; i < len; i++) {\n\t\t\t\tvar value;\n\t\t\t\tif (_.isArray(array[i])) {\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tarray[i].forEach(function(nestedElement) {\n\t\t\t\t\t\tvalue.push(eval('nestedElement' + path));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvalue = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = eval('array[i]' + path);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.warn(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult.push(value);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\tfunction dateDiff(date1, date2, spec) {\n\t\tlet date1format = getDateTimeFormat(date1),\n\t\t\tdate2format = getDateTimeFormat(date2);\n\t\tspec = __availableSpecs[spec] || __defaultSpec;\n\t\tif (validateOperation(date1format, date2format, spec)) {\n\t\t\tdate1 = moment(date1, date1format);\n\t\t\tdate2 = moment(date2, date2format);\n\t\t\treturn date1.diff(date2, spec);\n\t\t} else {\n\t\t\tconsole.warn('Invalid inputs at dateDiff.');\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tfunction sum(array) {\n\t\tvar total = 0;\n\t\tif (array && _.isArray(array) && array.length) {\n\t\t\tfor (var i = 0, len = array.length; i < len; i++) {\n\t\t\t\tif (array[i]) {\n\t\t\t\t\ttotal += array[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn total;\n\t}\n\n\tfunction extract(text, separator, index) {\n\t\ttext = 'string' === typeof text ? text : (text || '');\n\t\tseparator = separator || ',';\n\t\tindex = index || 0;\n\n\t\tvar extractedValue = text.split(separator)[index],\n\t\t\tresult = isNaN(extractedValue) ? extractedValue : Number(extractedValue);\n\n\t\treturn result;\n\t}\n\n\tfunction flatten(array, shallow) {\n\t\treturn _.flatten(array, shallow);\n\t}\n\n\tfunction groupConcat(array, separator) {\n\t\tseparator = typeof separator === 'undefined' ? ', ' : separator;\n\t\treturn array.join(separator);\n\t}\n\n\tfunction concat() {\n\t\tvar elements = Array.prototype.slice.call(arguments);\n\t\treturn elements.join('');\n\t}\n\n\tfunction count(array) {\n\t\treturn array.length;\n\t}\n\n\tfunction avg(array) {\n\t\tvar total = sum(array);\n\t\tif (array && _.isArray(array) && array.length>0) {\n\t\t\ttotal = total / array.length;\n\t\t}\n\t\treturn total;\n\t}\n\n\treturn function(formula, data, metaData) {\n\t\treturn eval(formula);\n\t};\n}).call();\n\nvar rules = [\n\t{\n\t\tpattern: '^=',\n\t\treplacement: ''\n\t},\n\t{\n\t\tpattern: '\\'',\n\t\treplacement: '\\\\\\''\n\t}\n];\n\nexport default class Formula extends CompiledExpression {\n\n\tconstructor(expression) {\n\t\tsuper(expression);\n\n\t\tthis._variables = [];\n\n\t\tconst variablesCache = {};\n\n\t\tfor(var i = 0, size = rules.length; i < size; i++) {\n\t\t\tvar rule = rules[i];\n\t\t\texpression = expression.replace(new RegExp(rule.pattern, 'g'), rule.replacement);\n\t\t}\n\n\n\t\tthis._parsedExpression = expression.replace(new RegExp(Helpers.patterns.variable, 'g'), (match, variableText) => {\n\t\t\tif (!variablesCache[variableText]) {\n\t\t\t\tvariablesCache[variableText] = this._variables.length;\n\t\t\t\tthis._variables.push(new Variable(variableText));\n\t\t\t}\n\t\t\treturn '[*' + variablesCache[variableText] + '*]';\n\t\t});\n\n\t}\n\n\tstatic isFormula(expression) {\n\t\treturn 'string' === typeof expression && expression.indexOf('=') === 0;\n\t}\n\n\teval(data, metaData, context) {\n\t\tvar contextPath = Helpers.getPath(context);\n\t\tvar parsedVariables = this._variables.map((variable) => {\n\t\t\treturn variable.parseVariable(contextPath);\n\t\t});\n\n\t\tlet resolvedParsedExpression = this._parsedExpression.replace(/\\[\\*(\\d*)\\*\\]/g, (match, number) => {\n\t\t\treturn parsedVariables[parseInt(number)];\n\t\t});\n\n\t\tlet value = evalWithSafeEnvironment(resolvedParsedExpression, data, metaData);\n\t\treturn value;\n\t}\n\n\tgetDependencies() {\n\t\treturn this._variables.map((fieldPath) => fieldPath.split('::').shift());\n\t}\n\n}\n","import Formula from './Formula';\nimport ConcatenatedText from './ConcatenatedText';\nimport DefaultValue from './DefaultValue';\n\nexport default class FormulaValue {\n\n\tconstructor(expression = '') {\n\t\tif (Formula.isFormula(expression)) {\n\t\t\tthis.compiledExpression = new Formula(expression);\n\t\t} else if (ConcatenatedText.isConcatenatedText(expression)) {\n\t\t\tthis.compiledExpression = new ConcatenatedText();\n\t\t} else {\n\t\t\tthis.compiledExpression = new DefaultValue(expression);\n\t\t}\n\t}\n\n\teval(data = {}, metaData = {}, context = '') {\n\t\tlet result = null;\n\t\ttry {\n\t\t\tresult = this.compiledExpression.eval(data, metaData, context);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic isFormulaValue(expression) {\n\t\treturn Formula.isFormula(expression) || ConcatenatedText.isConcatenatedText(expression);\n\t}\n\n}\n"],"sourceRoot":""}